services:

  postgresql:
    container_name: demo_postgresql
    hostname: demo_postgresql
    image: postgres:13-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=0000
      - POSTGRES_DB=my_kanban2
    volumes:
      - demo_db:/var/lib/postgresql/data/
    restart: no
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 4
    networks: 
      - demo_network
    
  redis:
    container_name: demo_redis
    hostname: demo_redis
    image: redis:7.4.0-alpine
    ports:
      - 6379:6379
    volumes:
      - demo_invitations:/data
      - ./redis_db/demo.sh:/usr/local/bin/init-redis.sh
    restart: no
    entrypoint: ["/usr/local/bin/init-redis.sh"]
    networks:
      - demo_network
    
  django:
    container_name: demo_django
    hostname: demo_django
    build:
      context: .
    ports:
      - 8000:8000
    environment:
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=127.0.0.1,localhost
      - SOCIAL_AUTH_GITHUB_KEY=your-github-key-here
      - SOCIAL_AUTH_GITHUB_SECRET=your-github-secret-here
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=0000
      - POSTGRES_DB=my_kanban2
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - demo_static:/app/staticfiles
      - demo_media:/app/media
    restart: no
    command: |
      sh -c "
      python3 manage.py migrate &&
      python3 manage.py collectstatic &&
      python3 manage.py loaddata data.json &&
      exec gunicorn my_kanban2.wsgi --bind 0.0.0.0:8000
      "
    depends_on:
      postgresql:
        condition: service_healthy
    networks: 
      - demo_network

  nginx:
    container_name: demo_nginx
    hostname: demo_nginx
    image: nginx:1.26.2-alpine
    ports:
      - 80:80
    volumes:
      - demo_static:/app/staticfiles
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: no
    depends_on:
      - django
    networks: 
    - demo_network


networks:
  demo_network:

volumes:
  demo_static:
  demo_media:
  demo_db:
  demo_invitations:
